     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: ./src/test.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: ./src/test.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 2) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: ./src/test.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: -
    14  .  .  .  Specs: []ast.Spec (len = 1) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: ./src/test.go:3:8
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"fmt\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  }
    27  .  .  .  Rparen: -
    28  .  .  }
    29  .  .  1: *ast.FuncDecl {
    30  .  .  .  Doc: nil
    31  .  .  .  Recv: nil
    32  .  .  .  Name: *ast.Ident {
    33  .  .  .  .  NamePos: ./src/test.go:5:6
    34  .  .  .  .  Name: "main"
    35  .  .  .  .  Obj: *ast.Object {
    36  .  .  .  .  .  Kind: func
    37  .  .  .  .  .  Name: "main"
    38  .  .  .  .  .  Decl: *(obj @ 29)
    39  .  .  .  .  .  Data: nil
    40  .  .  .  .  .  Type: nil
    41  .  .  .  .  }
    42  .  .  .  }
    43  .  .  .  Type: *ast.FuncType {
    44  .  .  .  .  Func: ./src/test.go:5:1
    45  .  .  .  .  TypeParams: nil
    46  .  .  .  .  Params: *ast.FieldList {
    47  .  .  .  .  .  Opening: ./src/test.go:5:10
    48  .  .  .  .  .  List: nil
    49  .  .  .  .  .  Closing: ./src/test.go:5:11
    50  .  .  .  .  }
    51  .  .  .  .  Results: nil
    52  .  .  .  }
    53  .  .  .  Body: *ast.BlockStmt {
    54  .  .  .  .  Lbrace: ./src/test.go:5:13
    55  .  .  .  .  List: []ast.Stmt (len = 6) {
    56  .  .  .  .  .  0: *ast.AssignStmt {
    57  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    58  .  .  .  .  .  .  .  0: *ast.Ident {
    59  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:6:2
    60  .  .  .  .  .  .  .  .  Name: "a"
    61  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    62  .  .  .  .  .  .  .  .  .  Kind: var
    63  .  .  .  .  .  .  .  .  .  Name: "a"
    64  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 56)
    65  .  .  .  .  .  .  .  .  .  Data: nil
    66  .  .  .  .  .  .  .  .  .  Type: nil
    67  .  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  }
    70  .  .  .  .  .  .  TokPos: ./src/test.go:6:4
    71  .  .  .  .  .  .  Tok: :=
    72  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    73  .  .  .  .  .  .  .  0: *ast.BasicLit {
    74  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:6:7
    75  .  .  .  .  .  .  .  .  Kind: INT
    76  .  .  .  .  .  .  .  .  Value: "1"
    77  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  }
    79  .  .  .  .  .  }
    80  .  .  .  .  .  1: *ast.DeclStmt {
    81  .  .  .  .  .  .  Decl: *ast.GenDecl {
    82  .  .  .  .  .  .  .  Doc: nil
    83  .  .  .  .  .  .  .  TokPos: ./src/test.go:7:2
    84  .  .  .  .  .  .  .  Tok: var
    85  .  .  .  .  .  .  .  Lparen: -
    86  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    87  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    88  .  .  .  .  .  .  .  .  .  Doc: nil
    89  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    90  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    91  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:7:6
    92  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
    93  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    94  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    95  .  .  .  .  .  .  .  .  .  .  .  .  Name: "b"
    96  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 87)
    97  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    98  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    99  .  .  .  .  .  .  .  .  .  .  .  }
   100  .  .  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   103  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:7:8
   104  .  .  .  .  .  .  .  .  .  .  Name: "int"
   105  .  .  .  .  .  .  .  .  .  .  Obj: nil
   106  .  .  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   108  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   109  .  .  .  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:7:14
   110  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   111  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   112  .  .  .  .  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  Comment: nil
   115  .  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  Rparen: -
   118  .  .  .  .  .  .  }
   119  .  .  .  .  .  }
   120  .  .  .  .  .  2: *ast.ForStmt {
   121  .  .  .  .  .  .  For: ./src/test.go:8:2
   122  .  .  .  .  .  .  Init: *ast.AssignStmt {
   123  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   124  .  .  .  .  .  .  .  .  0: *ast.Ident {
   125  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:8:6
   126  .  .  .  .  .  .  .  .  .  Name: "i"
   127  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   128  .  .  .  .  .  .  .  .  .  .  Kind: var
   129  .  .  .  .  .  .  .  .  .  .  Name: "i"
   130  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 122)
   131  .  .  .  .  .  .  .  .  .  .  Data: nil
   132  .  .  .  .  .  .  .  .  .  .  Type: nil
   133  .  .  .  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  TokPos: ./src/test.go:8:8
   137  .  .  .  .  .  .  .  Tok: :=
   138  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   139  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   140  .  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:8:11
   141  .  .  .  .  .  .  .  .  .  Kind: INT
   142  .  .  .  .  .  .  .  .  .  Value: "0"
   143  .  .  .  .  .  .  .  .  }
   144  .  .  .  .  .  .  .  }
   145  .  .  .  .  .  .  }
   146  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   147  .  .  .  .  .  .  .  X: *ast.Ident {
   148  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:8:14
   149  .  .  .  .  .  .  .  .  Name: "i"
   150  .  .  .  .  .  .  .  .  Obj: *(obj @ 127)
   151  .  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  .  OpPos: ./src/test.go:8:16
   153  .  .  .  .  .  .  .  Op: <
   154  .  .  .  .  .  .  .  Y: *ast.Ident {
   155  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:8:18
   156  .  .  .  .  .  .  .  .  Name: "a"
   157  .  .  .  .  .  .  .  .  Obj: *(obj @ 61)
   158  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   161  .  .  .  .  .  .  .  X: *ast.Ident {
   162  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:8:21
   163  .  .  .  .  .  .  .  .  Name: "i"
   164  .  .  .  .  .  .  .  .  Obj: *(obj @ 127)
   165  .  .  .  .  .  .  .  }
   166  .  .  .  .  .  .  .  TokPos: ./src/test.go:8:22
   167  .  .  .  .  .  .  .  Tok: ++
   168  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  Body: *ast.BlockStmt {
   170  .  .  .  .  .  .  .  Lbrace: ./src/test.go:8:25
   171  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   172  .  .  .  .  .  .  .  .  0: *ast.IncDecStmt {
   173  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   174  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:9:3
   175  .  .  .  .  .  .  .  .  .  .  Name: "b"
   176  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 93)
   177  .  .  .  .  .  .  .  .  .  }
   178  .  .  .  .  .  .  .  .  .  TokPos: ./src/test.go:9:4
   179  .  .  .  .  .  .  .  .  .  Tok: ++
   180  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  .  Rbrace: ./src/test.go:10:2
   183  .  .  .  .  .  .  }
   184  .  .  .  .  .  }
   185  .  .  .  .  .  3: *ast.AssignStmt {
   186  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   187  .  .  .  .  .  .  .  0: *ast.Ident {
   188  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:11:2
   189  .  .  .  .  .  .  .  .  Name: "a"
   190  .  .  .  .  .  .  .  .  Obj: *(obj @ 61)
   191  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  TokPos: ./src/test.go:11:4
   194  .  .  .  .  .  .  Tok: =
   195  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   196  .  .  .  .  .  .  .  0: *ast.BasicLit {
   197  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:11:6
   198  .  .  .  .  .  .  .  .  Kind: INT
   199  .  .  .  .  .  .  .  .  Value: "2"
   200  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  }
   202  .  .  .  .  .  }
   203  .  .  .  .  .  4: *ast.AssignStmt {
   204  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   205  .  .  .  .  .  .  .  0: *ast.Ident {
   206  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:13:2
   207  .  .  .  .  .  .  .  .  Name: "strList"
   208  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   209  .  .  .  .  .  .  .  .  .  Kind: var
   210  .  .  .  .  .  .  .  .  .  Name: "strList"
   211  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 203)
   212  .  .  .  .  .  .  .  .  .  Data: nil
   213  .  .  .  .  .  .  .  .  .  Type: nil
   214  .  .  .  .  .  .  .  .  }
   215  .  .  .  .  .  .  .  }
   216  .  .  .  .  .  .  }
   217  .  .  .  .  .  .  TokPos: ./src/test.go:13:10
   218  .  .  .  .  .  .  Tok: :=
   219  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   220  .  .  .  .  .  .  .  0: *ast.CompositeLit {
   221  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   222  .  .  .  .  .  .  .  .  .  Lbrack: ./src/test.go:13:13
   223  .  .  .  .  .  .  .  .  .  Len: nil
   224  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   225  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:13:15
   226  .  .  .  .  .  .  .  .  .  .  Name: "string"
   227  .  .  .  .  .  .  .  .  .  .  Obj: nil
   228  .  .  .  .  .  .  .  .  .  }
   229  .  .  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  .  .  Lbrace: ./src/test.go:13:21
   231  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 3) {
   232  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   233  .  .  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:13:22
   234  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   235  .  .  .  .  .  .  .  .  .  .  Value: "\"hello\""
   236  .  .  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   238  .  .  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:13:31
   239  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   240  .  .  .  .  .  .  .  .  .  .  Value: "\"world\""
   241  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   243  .  .  .  .  .  .  .  .  .  .  ValuePos: ./src/test.go:13:40
   244  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   245  .  .  .  .  .  .  .  .  .  .  Value: "\"world\""
   246  .  .  .  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  .  .  }
   248  .  .  .  .  .  .  .  .  Rbrace: ./src/test.go:13:47
   249  .  .  .  .  .  .  .  .  Incomplete: false
   250  .  .  .  .  .  .  .  }
   251  .  .  .  .  .  .  }
   252  .  .  .  .  .  }
   253  .  .  .  .  .  5: *ast.RangeStmt {
   254  .  .  .  .  .  .  For: ./src/test.go:14:2
   255  .  .  .  .  .  .  Key: *ast.Ident {
   256  .  .  .  .  .  .  .  NamePos: ./src/test.go:14:6
   257  .  .  .  .  .  .  .  Name: "_"
   258  .  .  .  .  .  .  .  Obj: *ast.Object {
   259  .  .  .  .  .  .  .  .  Kind: var
   260  .  .  .  .  .  .  .  .  Name: "_"
   261  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
   262  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   263  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 255)
   264  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   265  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:14:9
   266  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   267  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   268  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   269  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   270  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 261)
   271  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   272  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   273  .  .  .  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  .  .  TokPos: ./src/test.go:14:13
   277  .  .  .  .  .  .  .  .  .  Tok: :=
   278  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   279  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   280  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
   281  .  .  .  .  .  .  .  .  .  .  .  Op: range
   282  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   283  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:14:22
   284  .  .  .  .  .  .  .  .  .  .  .  .  Name: "strList"
   285  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 208)
   286  .  .  .  .  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  Data: nil
   291  .  .  .  .  .  .  .  .  Type: nil
   292  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  Value: *(obj @ 264)
   295  .  .  .  .  .  .  TokPos: ./src/test.go:14:13
   296  .  .  .  .  .  .  Tok: :=
   297  .  .  .  .  .  .  X: *(obj @ 282)
   298  .  .  .  .  .  .  Body: *ast.BlockStmt {
   299  .  .  .  .  .  .  .  Lbrace: ./src/test.go:14:30
   300  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   301  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   302  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   303  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   304  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   305  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:15:3
   306  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
   307  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   308  .  .  .  .  .  .  .  .  .  .  .  }
   309  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   310  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:15:7
   311  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Println"
   312  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   313  .  .  .  .  .  .  .  .  .  .  .  }
   314  .  .  .  .  .  .  .  .  .  .  }
   315  .  .  .  .  .  .  .  .  .  .  Lparen: ./src/test.go:15:14
   316  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   317  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   318  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: ./src/test.go:15:15
   319  .  .  .  .  .  .  .  .  .  .  .  .  Name: "str"
   320  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 267)
   321  .  .  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   324  .  .  .  .  .  .  .  .  .  .  Rparen: ./src/test.go:15:18
   325  .  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  Rbrace: ./src/test.go:17:2
   329  .  .  .  .  .  .  }
   330  .  .  .  .  .  }
   331  .  .  .  .  }
   332  .  .  .  .  Rbrace: ./src/test.go:18:1
   333  .  .  .  }
   334  .  .  }
   335  .  }
   336  .  Scope: *ast.Scope {
   337  .  .  Outer: nil
   338  .  .  Objects: map[string]*ast.Object (len = 1) {
   339  .  .  .  "main": *(obj @ 35)
   340  .  .  }
   341  .  }
   342  .  Imports: []*ast.ImportSpec (len = 1) {
   343  .  .  0: *(obj @ 15)
   344  .  }
   345  .  Unresolved: []*ast.Ident (len = 3) {
   346  .  .  0: *(obj @ 102)
   347  .  .  1: *(obj @ 224)
   348  .  .  2: *(obj @ 304)
   349  .  }
   350  .  Comments: nil
   351  }
